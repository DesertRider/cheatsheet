Outils pour l'aide:
-------------------
- man
- info    (naviguer avec TAB pour sélectionner un lien, "l" pour sortir du lien, "q" pour quitter)
- whatis  (décrit ce qu'est la commande demandée, ex: whatis crontab, afin de pouvoir interroger man)
- apropos
- howtos (répertoires /usr/share/doc/howto)
- doc des packages installés (/usr/share/doc/packages/package-name)
- release notes: /usr/share/doc/release-notes/...
- suse help center (icon on desktop)

Sections pour man:
------------------
1) Executable programs and shell commands (user commands)
2) System calls
3) Functions and library routines
4) Device files
5) Configuration files and file formats
6) Games
7) Macro packages and file formats
8) System administration commands

ex: man 1 crontab  ou man 5 crontab

man -k keyword pour chercher sur un mot clé

Répertoires:
------------
	/		Root directory
	/bin	Essential user command binaries (for use by all users, ex: ping, vi, ls, mkdir, ...)
	/boot	Static files of the boot loader
	/dev	Devices and special files
	/etc	Host-specific system configuration
	/home	User home directories (optional)
	/lib	Essential shared libraries and kernel modules
		 /modules/version#	modules du kernel version#
	/lib64 and /lib32	64/32-bit libraries (architecture dependent)
	/media	Mount point for removeable media
	/mnt	Mount point for a temporarily mounted filesystem
	/opt	Add-on application software packages
	/proc	Kernel and process information virtual filesystem
		 /proc/cpuinfo			informations about dhe processor
		 /proc/dma				use of the DMA ports
		 /proc/interrupts		use of interrupts
		 /proc/ioports			use of intrasystem i/o ports
		 /proc/filesystems		file system formats that the kernel understand
		 /proc/modules			active modules
		 /proc/mounts			mounted file systems
		 /proc/net/*			network-specific informations and stats
		 /proc/partitions		existing partitions
		 /proc/pci				existing PCI devices
		 /proc/scsi				connected SCSI devices
		 /proc/sys/*			system and kerner informations
		 /proc/version			kernel version

	/root	Home directory for the root user (optional)
	/sbin	Essential system binaries (ex: grub, fsck, mkfs, fdisk, ifconfig)
	/srv	Data for services provided by this system
	/sys	Provides information in the form of a tree structure on various 
			hardware buses, hardware devices, active devices, and their drivers.
	/tmp	Temporary files

	/usr	Location for all application programs, graphical interface files, additional libraries,
			locally installed programs, and commonly shared directories containing documentation
		/usr/X11R6				X Window System, Version 11 Release 6 (optional)
		/usr/bin				Almost all executable programs
		/usr/include			Header files included by C programs
		/usr/lib				Libraries for programming and packages
		/usr/local				Local hierarchy
		/usr/sbin				Non-essential standard system binaries
		/usr/share				Architecture-independent data
		/usr/share/dict			Word lists (optional)
		/usr/share/doc			Documentation
		/usr/share/man			Manual pages
		/usr/src				Source code (optional)

	/var	This directory and its subdirectories contain files that can be modified while the system is running.
		/var/account			Process accounting logs (optional)
		/var/cache				Application cache data
		/var/cache/fonts		Locally-generated fonts (optional)
		/var/cache/man			Locally-formatted manual pages (optional)
		/var/crash				System crash dumps (optional)
		/var/lib				Variable state information
		/var/lib/<editor>		Editor backup files and state (optional)
		/var/lib/hwclock		State directory for hwclock (optional)
		/var/lib/misc			Miscellaneous variable data
		/var/lock				Lock files
		/var/log				Log files and directories
		/var/mail				User mailbox files (optional)
		/var/opt				Variable data for /opt
		/var/run				Run-time variable data
		/var/spool				Application spool data
			/var/spool/cron		cron and at jobs	
			/var/spool/lpd		Line-printer daemon print queues (optional)
			/var/spool/rwho		Rwhod files (optional)

		/var/tmp				Temporary files preserved between system reboots
		/var/yp					Network Information Service (NIS) database files (optional)


Nomenclature des devices sous /dev:
-----------------------------------

Terminals			/dev/console	the system console
					/dev/tty1		the first virtual console (ctrl-alt-f1)
Serial ports		/dev/ttyS0		the first serial port
Parallel ports		/dev/lp0		the first parallel port
Floppy disk drives	/dev/fd0		the first floppy disk
IDE hard drives		/dev/hda		the first IDE drive on the first controller
(ou IDE CD-ROM)		/dev/hdc		the first IDE drive on the second controller
Partitions			/dev/hda1		the first partition of the first IDE drive, first controller
SCSI hard drives	/dev/sda		the first SCSI hard drive
SCSI CD-ROM drives	/dev/scd0		the first SCSI cdrom

Fichiers importants du user directory:
--------------------------------------

~/.profile							Private login script of the user
~/.bashrc							Configuration file for bash

Important configuration files:
------------------------------
/etc/SuSE-release					Version number of the installed SUSE LINUX Enterprise Server
/etc/inittab						Configuration file for the init process
/etc/init.d/* 						Scripts for starting services
/etc/grub.conf 						Configuration file of GRUB
/etc/modules.conf 					Configuration file of the kernel modules
/etc/DIR_COLORS 					Specifies the colors for ls
/etc/X11/XF86Config 				Configuration file of the X Window System
/etc/fstab 							Table of the file systems automatically mounted at the system start
/etc/profile	 					Login script of the shell
/etc/default						Fichier de paramètres utilisés lors de la création des utilisateurs
/etc/passwd 						User database; all information except passwords
/etc/shadow 						Encrypted passwords of users
/etc/group 							Database of user groups
/etc/cups/* 						Files for the CUPS printing system
/etc/hosts 							Allocation of computer names to IP addresses
/etc/motd 							Welcome message after a user logs in (message of the day)
/etc/issue 							Linux welcome message before the login prompt
/etc/sysconfig/* 					Central configuration files of the system
/etc/sysconfig/network/* 			Central configuration files for the network system


Meta-char les plus utilisés pour grep:
-------------------------------------

Character 	Meaning 						Example
^ 			Beginning of the line 			^The: The is matched if at the beginning of the line
$			End of the line eighty			$: eighty is matched if at the end of line
\<			Beginning of the word			\<thing\>:matches the whole word thing
\> 		End of the word 					\<thing\>:matches the whole word thing
[abc] 	One character from the set			[abc]: matches any one of “a”, “b”, and “c”
[a-z] 	Any one from the specified range	[a-z]: matches any one character from “a” to “z”
											[-:+]: any one of ”-”, “:” and “+”
[^xyz] 	None of the characters				[^xyz]: “x”, “y”, and “z” are not matched
. 			Any single character file		.: matches file1 and file2, but not file10
+ 			One or more of the preceding expression				[0-9]+: matches any number
* 			Any number (including none) of preceding 			file.*: matches file, file2, and file10
			single character
{min,max}	The preceding expression min times at minimum		[0-9]{1,5}: matches any one-digit
			and max times at maximum							to five-digit number
| 			The expression before or after						file|File: matches file and File
( ...) 	Enclose alternatives for grouping with others			(f|F)ile: matches file and F	
?			Zero or one of the preceding						file1?2: matches both file2 and file12
\ 			Escape the following metacharacter  				www\.novell\.com: matches www.novell.com, literally 
			to remove its special meaning						(with the dot not being treated as a metacharacter); 
																this is also necessary for parentheses, e.g., 
																matching a parenthetical pattern would require 
																the expression \([a-zA-Z]+\)

# --- grep des lignes non-commentées ou vides dans un fichier de configuration ---
egrep -v '^\s*#|^$' nrpe.cfg

# --- grep avec contexte (lignes entourant l'élément trouvé)
grep -A pour --after-context=NUM
grep -B pour --before-context=NUM
grep -C pour --context=NUM

# --- grep pour enlever le color lors des redirections
grep --color=never texte fichier|less

# --- less qui conserve les couleurs
grep --color=always "Alias" fichier| less -R
# ou dans less, taper -R
# ou utiliser la variable d'environnement LESS comme suit
export LESS=-R

# --- grep des lignes non-commentées ou vides dans un fichier de configuration ---
egrep -v '^\s*#|^$' nrpe.cfg

# grep avec no de la ligne trouvée
grep -nr toto fichier

# voir le contenu d'un fichier à partir d'un grep jusqu'à la fin
tail -n +$(grep -n -m 1 "Jan 15 11:10" /var/log/postfix.log | cut -f1 -d:) /var/log/postfix.log |less

Commandes les plus utilisées avec tar:
-------------------------------------

tar -cvf archive.tar /directory				créé un tar avec le contenu de /directory (récursif)
tar -cvzf archive.tgz /directory			créé un tgz (donc avec compression) avec le contenu de /directory
											(récursif)
tar -tvf archive.tar						liste le contenu de archive.tar
tar -xvf archive.tar 						extrait le tar dans le répertoire courant
tar -xvzf archive.tgz 						extrait le tgz (donc avec décompression) dans le répertoire courant

options (le "-" est optionnel):
c		create
d       diff - fait une comparaison entre le tar et les fichiers qui serait extraits
x		extrait
t		liste le contenu
f		file (précise le nom du fichier)
z		utilise la (dé)compression
v		verbose

--append pour ajouter à l'archive
--no-same-owner pour ne pas restaurer le ownership des fichiers/répertoires (si root)



Travail avec le shell:
----------------------

Scripts exécutés automatiquements:
/etc/profile		A system-wide configuration file read by all shells. It sets global configuration options.
~/.profile			A file created for each new user by default on the SUSE LINUX Enterprise Server. Any
					user-specific customizations can be stored in it. It will be read not only by bash, but also
					by other shells.
~/.bashrc			A read-only configuration file in which users store their customizations.
~/.bash_profile		The first user-level configuration file that bash tries to find. It contains user
					customizations (for	example, to change the command prompt). By default, this file is not
					present on the SUSE LINUX Enterprise Server.
~/.bash_login		The second user-specific file that bash tries to find. By default, this file is not created
					on the SUSE LINUX Enterprise Server. The counterpart to the file ~/.bash_login is the file
					~/.bash_logout. The actions to be performed when the user logs out can be set in this file.
					By default, this file is not created on the SUSE LINUX Enterprise Server.


Ligne de commande:
-----------------
- Ctrl-A key shortcut moves the cursor to the beginning of the command line
- Ctrl-E shortcut moves the cursor to the end of the command line
- Ctrl-W shortcut deletes the word immediately before the cursor
- Ctrl-K shortcut deletes everything immediately after the cursor
- Ctrl-Y undo a deletion 


Wildcards:
---------
?			n'importe quel caractère
*			n'importe quel string (sauf les fichiers commencant par ".")
[a-z]		a à z
[a-e,h-o]	a à e, h à o
[!0-9]		tout sauf 0 à 9

Caractères spéciaux:
\			pour éviter que le shell n'interprète certains caractères
',"			pour une chaine de caractères

Redirections:
- redirection de stderr:								ps 2>x.err
- redirection de stderr au même fichier que stdout:		ps >output.txt 2>&1
- redirection de stdout à l'écran et dans fichier:		ps |tee both.txt
- redirection de plusieurs commandes:					(pwd; ls) >content.txt


Commandes reliés au réseau:
---------------------------

- traceroute		indique le chemin des routers pour une destination
- mtr				un "traceroute" plus perfectionné
- route				affiche/modifie la table de routes utilisée
- ifup/ifdown	 	activer/désactiver une carte réseau
- ifstatus			affiche le statut d'une carte réseau


Copie d'un CD en fichier .iso (Ripping):
---------------------------------------

dd if=/dev/cdrom  of=/data/iso/nw65prod.iso
eject /dev/cdrom
mkdir /mnt/nw65prod
mount -o loop -t iso9660 /data/iso/nw65prod.iso /mnt/nw65prod


Partitions, disques rigides et file systems:
-------------------------------------------

df -lh					affiche les partitions, leur dimensions (full, used, avail. et %) et leur mount point
df -T					affiche le type des partitions (reiserfs, ...)
du -h					affiche l'espace disque utilisé par les fichiers et répertoires
du -h -d 1			 	affiche l'espace disque totalisé pour chaque sous-répertoire
du -sh					affiche l'espace disque utilisé (total du répertoire courant seulement)
du -x					ignore les répertoires qui sont montés d'un autre mount point
fdisk -l /dev/hda		affiche les partitions pour /dev/hda
cfdisk /dev/sda         permet la modification des partitions
cfdisk -P (s ou t) /dev/sda    affiche les partitions


Process, background et autres...:
---------------------------------

Commande d'informations des processus:
  - "jobs" nous indique les "jobs" en background et leur statut (running, stopped, ...).
  - "ps" nous indique les process (lancés par l'utilisateurs) qui roulent (ex: bash, xeyes, ...)
  - "pstree" nous affiche une hiérarchisation des processus qui roulent.
  - "top" nous affiche les processus les plus accaparant pour le système, par ordre.
  - "kill" nous permet de tuer un processus

Variables Bash relatives au process:
  - "$$" est le current pid 
  - "$!" est le pid du dernier process lancé en bg

Informations sur le système:
----------------------------

- logs
	/var/log/boot.msg (et commande dmesg|less)
	/var/log/faillog (et commande faillog): log des login failed
	/var/log/messages: messages du systèmes (ex: erreurs d'authentification d'un user, ...)

- hardware informations:
	- répertoire /proc/
		cpuinfo, iomem, interrupts, bus, ...
	- commandes hwinfo, hdparm, fdisk, iostat, lspci, lsusb et siga
	- yast hwinfo

- system & process infos:
	- commandes top, uptime, ps, netstat, uname
	- (GUI) KDE System Guard, Xosview, SuSEPlugger
	
- Version du kernel:
    - uname -r
	- export KVER=\`uname -r\`


Users and groups:
-----------------

- identifiés de façon interne par un numéro (user ID (ou UID) et Group ID (ou GID)
	- root=0
	- normal users UID=1000+, GID=100+
	- pour voir les infos uid et gid de l'utilisateur: commandes "id" et "finger"

- principaux utilitaires de ligne de commande: 
	- useradd, userdel, usermod, passwd, chage, group pour les utilisateurs
	- groupadd, groupdel, groupmod pour les groupes

- normal vs system users: les system users sont utilisés par les services et utilitaires et
  sont normalement créés par l'installation de ceux-ci

- usagers normaux sont stockés dans /etc/passwd et /etc/shadow, les groupes dans /etc/group

- le fichier /etc/default spécifie certains paramètres de la création des utilisateurs. De même,
  le répertoire /etc/skel contien la structure de répertoire initiale qui sera créé pour un nouvel
  utilisateur.

- changement d'utilisateur: 
	- su (switch user) et sux (pour hériter l'environnement X)
	- newgrp (new group) et sg (switch group)pour changer le GID (par exemple, pour la création de répertoires)
	- retour à l'identité précédente par "exit" ou Ctrl-D
	- la commande sudo permet d'exécuter une commande comme si on est un autre utilisateur;
	  le fichier /etc/sudoers permet de configurer quelles commandes peuvent être exécutés par les
	  utilisateurs. On peut modifier ce fichier par "visudo" (voir man 5 sudoers)


File & directories permissions:
-------------------------------

				 Read			Write					Execute
-----------+--------------------------------------------------------
Fichier    | Lecture		Modifier				Exécution
Répertoire | Lister			Créer/détruire			Permet l'accès
               4				3					   1

- commande chmod change les permissions d'accès 
- commande chown et chgrp changent le owner et/ou groupe
- commande umask pour changer les default access permissions (pour les nouveaux fichiers/rép. créés)
  (permissions par défault: 777 pour répertoires, 666 pour fichiers)
  -> permanent, system-wide umask setting dans /etc/profile
  -> user-specific umask setting peut être mis dans ~/.bashrc

- Special file permissions (Uppercase si absence d'execute bit)
	- "t" ou "T" ou "1" Sticky bit: 
		- Répertoires seulement: les fichiers de ce répertoire ne peuvent être détruit que par root 
		  ou le owner du fichier (ex: /tmp/)
		-> visible dans les permissions de Others. Ex:
			# ls -ld /tmp
			drwxrwxrwt 15 root root 608 2007-01-17 12:47 /tmp
	- "s" ou "S" ou "2" SGID (set GroupID): 
		- Fichiers: Lorsque le programme s'exécute, il règle le GID du process à celui du fichier
		- Répertoires: Les fichiers créés dans ce répertoire appartiennent au groupe du répertoire,
		  et les répertoires créés dans ce répertoire hériteront du SGID bit
		-> visible dans les permissions de Group. Ex:
			# ls -l /usr/bin/wall
			-rwxr-sr-x 1 root tty 79605 2005-02-27 11:27 /usr/bin/wall
	- "s" ou "S" ou "4" SUID (set UserID): 
		- Fichiers seulement: Set le userid du process au owner du fichier et non de celui du user
		-> visible dans les permissions de User. Ex:
			# ls -l /usr/bin/passwd
			-rwsr-xr-x 1 root shadow 79605 2005-02-27 11:27 /usr/bin/passwd
	- commandes: chmod o+t /tmp ou chmod 1777 /tmp par exemple
	             chmod ug+X -R répertoire -> donnera le droit d'aller dans les sous-répertoires (droit x) mais pas de x aux fichiers

- certains autres attributs existent (ex: A, a, d, i, S) mais peuvent être présent que dans certains
  file systems.

- fichiers permissions, permissions.easy, permissions.secure, permissions.paranoid & permission.local du
  répertoire /etc: Ils règlent des droits comme le SID.


PAM (Pluggable Authentication Modules):
---------------------------------------

- Fichiers de configuration dans /etc/pam.d/ et /etc/security/

- Si le fichier /etc/nologin existe, il empêchera l'utilisateur de se logger (on peut y mettre le message
  à afficher)


Login activity:
---------------

- les commandes suivantes montrent des infos concernant les utilisateurs:
	- who montre les utilisateurs qui sont connectés ainsi que leur heure de connexion;
	- w montre les utilisateurs et leurs process
	- finger
	- last
	- lastlog
	- faillog


Systèmes de fichiers (File Systems):
------------------------------------

- traditionnels:
	- ext2:				(rapide et efficace)
	- minix:			(1er fs supporté par Linux)
	- ms-dos3vfat:		(DOS/Win 9x)
	- hpfs: 			(OS/2)

- avec journalisation:
	- ext3:				version journalisation de ext2
	- ReiserFS:			très bon pour petits fichiers ou grand nombre de fichiers
	- NTFS:				(Windows NT) *** lecture seulement! ***
	- IBM's JFS:		Advanced journaling file system
	- SGI's XFS:		supporte throughput de plus de 300mb/sec et plus de 32 millions de fichiers/répertoire

- Virtual Filesystem Switch
	- Niveau d'abstraction dans le kernel offrant des interfaces définis pour des processus. Il inclut des
	  fonctions tel que l'ouverture de fichier, de lecture et d'écriture
	- bref, c'est le morceau du kernel qui permet d'ouvrir un fichier, lire ou écrire, peut importe le filesystem
	  auquel il est rattaché;
	- c'est lui qui affiche les caractéristiques du fichier aux utilisateur comme si c'était un systeme UNIX,
	  incluant les permissions d'accès même si cette notion n'existe pas (ex: VFAT)

- Formats des systèmes de fichiers:
	-> les données et les informations d'administrations sont séparées. Les fichiers sont décris par un inode
	   (index node our information node);
	-> l'organisation des données diffère selon les différents systèmes

	- ext2:
		- le nombre d'inodes est fixe et créé au formattage
		- allocation par bloc, ce qui crée un certain gaspillage d'espace disponible
		- le rapport d'inodes/blocs peut faire que l'on ne peut stocker plus de fichiers même s'il y a
		  toujours de l'espace disponible, ou d'avoir une trop grande proportion d'espace réservé aux inodes

	- ReiserFS:
		- les inodes sont créés sur demande, pas au formattage de la partition
		- les petits fichier et la fin des fichiers sont stockés dans le même bloc, donc pas de perte d'espace
		- l'utilisation d'arbres binaires balancés dans l'organisation des data blocks lui donne un temps d'accès
		  rapide mais demande plus de travail à chaque écriture de fichier (rebalancage de l'arbre)

	- les inodes contiennent des infos sur les fichiers, mais pas leur nom. Il est inscrit dans le répertoire
	  ainsi que son inode.

	- Caractéristiques du système de fichier
		- ctime: creation time
		- atime: access time
		- mtime: modification time
		- types de fichiers: normaux, répertoires, device files, links, sockets et FIFOs (named pipes)

	- Journalisation des file systems
		- sans journalisation, 2 écritures sur le disque lors de la création d'un fichier:
		  1) le data, 2) le métadata (les informations d'indexation sur le fichier)
		- avec journalisation, 4 écritures:
		  1) écriture au journal de la création de fichier aura lieu
		  2) écriture du data
		  3) écriture du métadata
		  4) écriture au journal que la création est terminée
		- plus d'overhead mais beaucoup moins de chance d'inconsistences du file system
		- les petites partitions (ex: /boot) utilisent normalement ext2 pour diminuer l'overhead

- Création et gestion du file system
	- création via Yast Partitionner ou par les utilitaires fi, mkreiserfs
	- commandes importantes:
		- umount -f permet de démonter un file system alors que le kernel pense qu'un fichier est utilisé
		- commandes pour reiserfs:
			- reiserfstune (nommer un fs), resize_reiserfs, reiserfsck (repair)
		- df -lh pour afficher les disques/partitions/espace utilisés
		- du -h pour afficher l'espace utilisé par les fichiers et répertoires
		- fuser affiche le process id (PID) du programme utilisant le fichier indiqué
	
	
Gestion des tâches (cron):
--------------------------

	- system jobs: /etc/crontab
	- autres jobs: /etc/cron.hourly/, /etc/cron.daily/, /etc/cron.weekly/ et /etc/cron.monthly/
	- contrôle des utilisateurs qui peuvent créer des jobs cron via /var/spool/cron/allow et deny 
	  (accédé dans cet ordre). Si inexistant, seulement root peut définir des jobs. Les jobs des utilisateurs
	  sont dans /var/spool/cron/tabs/(username). La gestion de ces fichiers se fait par la commande crontab.


Gestion des tâches (at):
------------------------
	- commande at, atq, atrm
	- le service atd doit être démarré
	- ex:
		# redémarrer apache dans 1 minute
		at now + 1 minute
		at> service httpd restart
		at> ^D
		# déménager une ressource cluster à 20h
		at 20:00
		at> cluster migrate qxpclser qxpclu03
		at> ^D
		# créer une job à partir d'un fichier texte
		at noon -f fichier.txt
		at midnight < autre_fichier.txt
		# pour lister les jobs "at" dans la queue
		atq
		# voir les commandes qui seront fait par la job #1 (voir commande atq)
		at -c 1
		# détruire job #1
		atrm 1

Gestion et maintenance des applications:
----------------------------------------
  
- Managing RPM packages
	- Installations via par RPM:
		- rpm -i package.rpm pour installer, -U ou -F pour mettre à jour (nouvelle version)
		- les fichiers de configuration qui ont été modifié seront sauvegardés en .rpmorig ou .rpmsave afin de
		  permettre de faire les mêmes changements (manuellement). Les détruires après cette étape.
		- rpm -ql package (ex: rpm -ql wget) liste les fichiers de l'application (permet donc de voir où sera les
		  fichiers README ou de configuration)
		- rpm -qd package liste les documents du package
		- rpm -V package pour vérifier quels sont les fichiers de ce package qui ont été changés et comment (file
		  size, owner, ....)
		- rpm -qf /bin/kill donne le nom du package de cet outil
		- rpm -qpRi mod_auth_cas-1.0.8.1-3.el6.i686.rpm   pour voir le contenu d’un rpm 
		- rpm -qR openssl-1.0.0-25.el6_3.1.x86_64 pour voir qui utilise le fichier...
		- rpm -e package (sans le ".rpm") déinstalle l'application
		- rpm -qp --scripts ./packagecloud-test-1.1-1.x86_64.rpm pour voir les script de préinstall et postinstall du rpm
		
		*** On peut utiliser http://... ftp://... ou nfs://... avant le nom du fichier rpm
		ex: rpm -Uvh http://qxprep01/patch.rpm

		- zcat /media/SUSE1030.001/ARCHIVES.gz|grep xpm.h   affichera quel rpm contient le fichier xpm.h
		
	- Installations par Yast
		- Yast -i package (ex: yast -i ethereal) 
		- menu YaST, Software, Install and Remove Software
		
- Verify and update Software Library Access
	- Dynamic software libraries: librairies communes à plusieurs programmes (comme les DLLs)
	- Static software libraries: librairies inclues dans le programme compilé. Plus indépendant.
	- Library naming syntax: libname.so.version pour les dynamiques ou "a" au lieu de "so" pour les statiques.
	  ex: libncurses.so.5.3
	- ldd -v filename liste les dépendances (librairies requises) (ex: ldd -v /usr/bin/zip)
	- le fichier /etc/ld.so.conf contient le path pour chercher les librairies (/lib, /usr/lib, toujours utilisés)
	- library cache: contient une liste binaire des librairies à utiliser. Si on modifie /etc/ld.so.conf, on doit
	  lancer /sbin/ldconfig -p pour le mettre à jour
	- si on veut utiliser une librairie qui n'est pas localisée dans un répertoire listé, on peut faire la commande
	  export LD_LIBRARY_PATH=path
	  
- Configuration des online updates: YOU
	- gérable par YaST, YOU server configuration
	- on peut avoir une gestion avec un serveur qui se connecte avec le web et les autres à ce serveur
	  (mode clients/serveur)
	- voir livre pour les détails de la configuration client/serveur


Gestion de l'initialisation du système:
---------------------------------------

- L'initialisation du système est gérée par /sbin/init (utilisant /etc/inittab), process qui lancera tous les
  autres processus et qui s'assure de leur arrêt.
	
- Le fichier /etc/inittab indique à init comment lancer les différents RunLevels, contrôle le comportement de 
  ctrl-alt-del (sur le serveur) et quels RunLevels lancent le process getty (login process).
  
- Les scripts de lancements et d'arrêt des divers services sont placés dans /etc/init.d et de façon générale, 
  leur paramètres sont start, restart, stop, reload, force-reload et status.
  
- Des liens symboliques existent dans les répertoires des différents RunLevels (ex: /etc/init.d/rc2.d/), commençant
  par un "S" ou un "K" (start ou kill), suivis par 2 digits et le nom du service. C'est la présence ou l'absence
  de ces liens dans les différents répertoires qui fait que le service démarre/arrête pour le RunLevel en question.
  Les numéros utilisés indiquent l'ordre des services à démarrer (ex: network avant web server) ou à arrêter.
  
- La gestion de l'activation/désactivation de services pour un Runlevel se fait par YaST ou par la commande insserv

- On peut changer le Runlevel courrant par la commande init (ex: init 3). On peut changer à la console virtuelle 1
  (ctrl-alt-F1) et faire init 3, fermant de ce fait le système X-Windows. La commande init 5 le relancerait.
  
- Commande pour arrêter le serveur: halt, poweroff, reboot, shutdown

- Gestion du matériel:
	
	- Le kernel qui est installé dans répertoire /boot est configuré pour beaucoup de matériels différents. Il
	  n'est pas nécessaire de compiler un un nouveau kernel pour gérer un nouveau matériel, il peut être géré comme
	  modules du kernel. Ces modules peuvent être chargés plus tard, lorsque le système s'exécute (ex: modules
	  non requis lors du boot du serveur), permettant d'avoir un kernel relativement petit. Ces modules sont placés
	  dans /lib/modules/(version)/kernel/

	- Commandes pour les modules: lsmod (lister), insmod et modprobe (charger), rmmod (retirer), depmod(dépendances),
	  modinfo (affiche infos) et fichier de configuration /etc/modprobe.conf

	- Pour voir le matériel détecté: commande hwinfo, less /proc/devices (et autres fichiers sous /proc) ou via YaST
	  (Hardware information), ou SUSE hardware tool dans system tray (suseplugger).
	 
	- Détails (géométrie) du disque: fdisk -l /dev/hda, settings du disque: hdparm -a /dev/hda

- Monitoring du hardware: iostat, top, "X osview" (dans System, Monitor et commande xosview) et KDE System Guard (*)

- Boot Managers:
	- Une fois que le POST du micro a terminé, il cherche sur le boot secteur du disque un boot loader, le charge
	  et l'exécute.
	- Un boot manager est un boot loader qui gère plusieurs OS (ex: Windows, Linux, ...) et/ou différents paramètres
	  de kernel
	- Un boot manager est basé sur une architecture à 2 étapes:
	  - étape 1: est normalement installé dans le MBR du disque dur mais peut être sur une disquette. Comme l'espace
	    y est restreint (446 bytes), le code placé ne sert qu'à charger la 2e étape.
	  - étape 2: c'est le vrai boot loader. Les fichiers utilisés sont placés dans /boot/
	- Il y a 2 principaux boot managers sous Linux: GRUB (le standard) et LILO
	- Grub supporte plusieurs FileSystems (ext2, ext3, ReiserFS, JFS, XFS, ...). Il peut donc accéder à des fichiers
	  avant même que le système d'exploitation soit chargé. Il a son propre shell, permettant donc un contrôle
	  interactif du boot manager.
	
- Modification des réglages du systèmes
	- On peut voir et changer des réglages du système avec les fichiers de /proc et /proc/sys
	- Les changements effectués à cet endroit sont volatiles, ils ne seront pas gardés au prochain redémarrage
	- On peut voir les réglages par cat & less et par la commande sysctl
	- On peut régler des variables par la commande "echo (valeur) > variable" ou par la commande 
	  "sysctl -w variable=valeur"
	- Pour des réglages permanents, on utilise le fichier /etc/sysconfig/sysctl et la commande sysctl -p, ou le
	  script /etc/init.d/boot.sysctl start (à activer dans les services)
	- On peut aussi utiliser Yast Powertweak (kernel & hardware options) et Yast /etc/sysconfig Editor (system
	  settings).
	  
	  
Linux Processes and Services
----------------------------

- définitions:
	- PID: process ID. Utilisé pour changer la niveau de priorité d'un process.
	- PPID: parent process ID
	- Job ID: "shell-specific numeric value that identify the running program uniquely within that shell". Utilisé
	  pour mettre en background ou foreground.
	- priorités: Linux essaie de distribuer le temps CPU équitablement à tous les processus. La valeur par défaut
	  est un "nice" de +10. On peut changer cette valeur par "nice" et "renice", allant de -20 (la plus haute 
	  priorité) à +19 (la plus basse priorité). Seul root peut demander une priorité négative ou diminuer le nice
	  d'un process qui s'exécute.
	  
- Un programme passé en background qui requiert un input sera gelé à cette étape tant qu'il ne sera pas ramené en
  foreground.
  
- Commandes:
	- pour stopper un process lancé en foreground, pressez ctrl-z
	- pour continuer son exécution en background, utiliser la commande bg
	- on peut démarrer un process en background avec "&" à la fin de la ligne de paramètres (il le restera tant que
	  ce shell restera ouvert. Ceci produira un output indiquant le job id et le process id (utilisé avec une 
	  redirection pour éventuellement killer le proccess).
	- "jobs" nous affiche les processus démarrés et leur état (Stopped ou Running)
	- "fg" ramène une job en foreground
	- "ps" liste les processus
	- "pstree" affiche une arborescence des processus (voir aussi pstree -up)
	- "nice" lance un programme avec une priorité différente que celle par défaut
	- "renice" change la priorité d'un process en cours d'exécution
	- "top" permet de voir les processus en cours, de changer leur priorité et de les tuer (voir aussi KDE
	  System Guard)
	- "kill" termine un processus, "killall" plusieurs
	
- Service (ou daemon: Disk And Execution Monitor): c'est un ou plusieurs processus qui attendent pour que se 
  produise un événement externe pour exécuter une partie du programme. Ex: Apache, cron, ...
  
  - leur script de lancement est généralement placé dans /etc/init.d et utilise les paramètres "start", "stop" et
    "restart".
  - "chkconfig" affiche/édite le runlevel d'un service
  - "insserv" installe le service 
  - Yast, System, RunLevel editor permet ces mêmes changements.
  - /etc/init.d/skeleton est le fichier squelette pour faire soi-même un script de démarrage d'application
  
  
Mount d'un partage Windows
--------------------------

# mount -t cifs -o guest //192.168.0.99/Documents /media/partwin
# mount -t cifs -o username=vivek,password=D1W4x9sw //ntserver/download /mnt/ntserver


Virtualisation
--------------

- Pour tester rapidement une image cdrom iso bootable, faire:
  qemu -cdrom image.iso
  
  
Trouver le rpm qui fournira l'application cherchée
--------------------------------------------------

- aller dans le répertoire "source" (dvd d'installation ou répertoire) et faire:
  zcat INDEX.gz|grep programme  (peut être ARCHIVE.gz si SLES)
  
  
Configuration IP manuelle et rapide
-----------------------------------

ifconfig eth0 10.53.x.x netmask 255.255.252.0
route add default gw 10.53.228.1 eth0
(si rien dans /etc/resolv.cfg, ajouter:
 search dgeq.qc.ca
 nameserver 10.53.228.211
 nameserver 10.53.228.212)
 

Resize partition reiserfs
-------------------------

(fonctionne si le disque a été agrandi (ex: SAN) donc que la partition a du free space "derrière" elle)
- df -h /data -> peu de free space
- umount /dev/sdb
- fdisk /dev/sdb
  delete partition 1
  recreate partition 1 with same begining
  
- resize_reiserfs /dev/sdb
- mount /dev/sdb /data
- df -h /data  -> free space disponible est plus grand


Bash for loop examples
for VARIABLE in 1 2 3 4 5 .. N
do
	command1
	command2
	commandN
done

for VARIABLE in file1 file2 file3
do
	command1 on $VARIABLE
	command2
	commandN
done

for OUTPUT in $(Linux-Or-Unix-Command-Here)
do
	command1 on $OUTPUT
	command2 on $OUTPUT
	commandN
done

voir https://www.cyberciti.biz/faq/bash-for-loop/


Quick & dirty notes
===================

# --- vi et vim ---
*/#					search next/prev occurence of word under cursor
hjkl				déplacement gauche, bas, haut, droit
w/b					saut avant/arrière au début du prochain mot
f/F					cherche avant/arr. du prochain car tapé sur la ligne
dw/cw				delete/change word
rx					change le car. sous le curseur par x
9G					va à la ligne 9
/{up}				search history
/.pache	wildcard	dans recherche
:set [no]number		affiche les numéros de ligne ou pas
:set [no]hlsearch	highlight search oui/non
:nohlsearch			désactive le highlight du search courant seul.
:s/1/2/g			remplace 1 par 2 pour la ligne
:%s/1/2/g			remplace 1 par 2 pour toutes les lignes
:%s/1/2/gi			remplace 1 par 2 pour toutes les lignes, case ins.
:%s/1/2/gc			rempl. 1 par 2 pour toutes les lignes avec conf.
:1,$s/1,2,/g        remplace 1 par 2 pour toutes les lignes (identique à :%s/1/2/g)
:.,$s/1,2,/g        remplace 1 par 2 pour la ligne courante jusqu'à la fin du document

:set viminfo+=/0	désactive search history
:set smartcase		pour search case insensitive
:set [no]ignorecase	recherche case sensitive ou pas
:edit fichier       pour ouvrir un second fichier
:set formatoptions-=r pour empêcher les commentaires "#" de se continuer automatiquement sur une nouvelle ligne après un Enter
:set wrap!          pour arrêter le wrap des lignes longues

#delete from here to end of file:
dG
#record macro in register "a"
qa(actions)q
#playback macro in register "a" 10 times
10@a
#repeat macro until end of file
:%normal @a


# cherche avec case insensitive du name
# --- find ---
find . -iname log4j* -ls

# pour trouver les fichiers modifié depuis moins d'un jour
find . -mtime 0 -print

# pour ceux modifié il y a moins d'une heure
find . -mmin -60 -print

#Pour trouver les fichiers modifiés depuis 1 jour  dans le répertoire courant :
find . –ctime -1 –print

#Pour trouver tous les fichiers modifié depuis la dernière semaine:
find . -ctime -7 -print

# trouver un répertoire avec le nom erreur
find / -type d -name erreur

# find + print detailed infos sur les fichiers trouvés
find . -name authorized_keys -exec ls -l '{}' \;

# dir récursif avec détails
find . -exec ls -l '{}' \;
ou
find . -type f -printf '%p\n'

# lister les fichiers plus vieux de 30 jours
find . -mtime +30 -exec ls '{}' \;

# ménage des fichiers plus vieux de 30 jours
find . -mtime +30 -exec rm '{}' \;

#liste fichier créé aujourdhui
find -maxdepth 1 -type f -mtime -1

#liste répertoire créé aujourd'hui
find -maxdepth 1 -type d -mtime -1

# trouver les fichier d'un utilisateur
find /var -user www-data

# limiter la profondeur de recherche à 2 niveaux de répertoires
find -maxdepth 2 -name *.conf
(on peut faire un mindepth aussi)

# inverser la recherche
find -maxdepth 1 -not -iname *.c

# chercher d'après l'auteur du fichier
find / -user foreman-proxy

# trouver les fichiers pas d'un certain user
find . \! -user root -print

# find avec logical or
find / \( -iname snap.*.trc -o -iname core.*.dmp -o -iname heapdump.*.phd -o -iname javacore.*.txt \) -print

# find avec exclusion de répertoire... 
find / -path /media/nss -prune -o \( -iname snap.*.trc -o -iname core.*.dmp -o -iname heapdump.*.phd -o -iname javacore.*.txt \) -print  

# find fichier récent plus gros que 500M
find / -type f -size +500M -ctime -1 -exec  ls -l '{}' \;

# --- trouver les programmes qui ont le bit setuid ou setgid activé
find / -xdev -type f -perm +ug=s -exec ls -ldb {} \;

# --- tmux ---
tmux –L shqsrc [attach]
(voir aussi Tmux crash course, section Référence de mon firefox)
relire le fichier de config:
^B:source-file ~/.tmux.conf

# --- tcpdump ---
tcpdump -A -s 4096 port 80  host 10.100.120.144
# de façon plus concise, sans le contenu des paquets:
tcpdump -nn not port 22

# --- chkconfig ---
chkconfig iptables off
chkconfig --list
chkconfig --add httpd
chkconfig httpd on
chkconfig --del httpd

# --------------------------------------------------------------
# Partition en ext4
# 1) Partition complète de /dev/sdb1
fdisk /dev/sdb<<EOF
n
p
1


w
EOF

# 2) formatter le file system en ext4
mke2fs -T ext4 -L sftp /dev/sdb1
# en XFS:
mkfs.xfs -L sftp /dev/sdb1

#3 identifier le UUID du disque
blkid /dev/sdb1
/dev/sdb1: LABEL="sftp" UUID="8e0bfa10-d807-4202-bf2b-9fc6e514adf2" TYPE="ext4"

# modifier /etc/fstab, ajouter:
UUID=8e0bfa10-d807-4202-bf2b-9fc6e514adf2 /sftp                   ext4    defaults        1 2

#monter la partition
mount -a

# --------------------------------------------------------------
# Mettre un label à une partition
e2label /dev/hdb1 pubsw
# ou
tune2fs -L pubsw /dev/hdb1 
# ou le faire au formattage de la partition
mke2fs -L pubsw /dev/hdb1 

#--- nouveau disque ajouté, rescan des disques ---
for HOST in /sys/class/scsi_host/host* ; do echo "- - -" > $HOST/scan ; done
for HOST in /sys/class/fc_host/host* ; do echo "1" > $HOST/issue_lip ; done
fdisk -l

rescan-scsi-bus.sh --forcerescan
# provient du package sg3_utils

# si disk remove
rescan-scsi-bus.sh -d

# si resize d'un disque au lieu d'un ajout:
rescan-scsi-bus.sh -s

# si multipathd est employé (serveurs physiques et SAN)
service multipathd reload
fdisk -l
# cette commande va lister les disques et leurs maps
multipath -ll

# fichier de configuration de multipath (pour description des noms - voir qxtcloes02)
vim /etc/multipath.conf
service multipathd reload

# console multipath
multipathd -k
multipathd> list maps
name                              sysfs uuid
36006016026404100f54bae90929be611 dm-0  36006016026404100f54bae90929be611
multipathd> resize map 36006016026404100f54bae90929be611
multipathd> exit

# multipathd avec mots clé
multipathd -k"keyword"
pour lister: multipathd -k"help" 

# voir aussi les commandes powermt (powerpath) sur qpxclu03
powermt display dev=all
# après destruction d'un lun
powermt check dev=all
powermt display dev=all

#--- Voir des informations sur un disque, selon udev
udevadm info --query=all --name=/dev/sda

#--- listes des informations sur les disques scsi
scsi_id --page=0x80-0x83 --whitelisted --device=/dev/sda

#--- ajouter un groupe à un utilisateur ---
# ajout à l'utilisateur jboss le groupe appsrvr
usermod -a -G appsrvr jboss

#--- changer de current user pour un system user ---
su -s /bin/bash - zabbix

#--- exécuter une commande sous un autre utilisateur ---
su nagios-nrpe -c "date > /tmp/x"

#--- voir les groupes qu'un utilisateur fait parti ---
groups [user]

#--- mettre les acl des fichiers qui seront créés dans un répertoire ---
# régler les acl du répertoire
setfacl -m u:shqoud:rwx entree-abf entree-bep
# régler les acl "Default", donc pour les fichiers qui y seront créés
setfacl -d -m u:shqoud:rwx entree-abf entree-bep
# régler les acl des fichiers existants 
setfacl -m u:shqoud:rwx entree-abf/*

#--- copier les acl d'un répertoire pour les mettre dans un autre ---
getfacl sourcedir | setfacl --set-file=- destdir

#--- voir les groupes d'un utilisateur
id oracle

#--- créer un user system avec un uid particulier ---
useradd jboss -u533 -r

#--- créer un user oracle avec uid et gid, sans créer un home directory ---
useradd oracle -g 900 -g 902 -M

#--- ajouter un groupe system avec un uid particulier ---
groupadd appsrvr -g 12001

#--- changer le gid d'un groupe ---
groupmod -g 999 users

#--- redémarrage "gracieux" d'apache (pas de drop de connexions) ---
apachectl graceful

# --- test des fichiers de configuration d'apache ---
httpd -t

# --- afficher la configuration des NameVirtualHosts
httpd -S

#--- redirection ssh / putty (port forwarding) ---
# exemple de tunnel ssh fait par putty: la console CUPS n'est accessible qu'à localhost sur le port 631
# alors dans Putty on ouvre une session ssh, on modifie Connection > SSH > Tunnels, dans "Source port" on indique 631, dans Destination
# on indique localhost:631
# On peut maintenant accéder à la console CUPS via firefox http://localhost:631
#
# exemple d'accès à un serveur web sur le port 80 via notre port local 8080
# putty > Connection > Ssh > Tunnels > Source Port 8080, Destination "localhost:80"
# accéder au serveur via http://localhost:8080
# (sur serveur qxpfas01 par exemple)

# redirections locales
ssh -L 2022:remote.edu:22 intdude@intermediate.edu 
# This creates an "ssh tunnel" starting at localhost:2022 through intermediate.edu (which has the default ssh port of 22) to remote.edu:22.
# As a byproduct it gives you a shell on intermediate.edu. The idea is that you can use ssh to connect to remote.edu from localhost through
# the tunnel. 

M0:$ ssh -L 1234:localhost:80 M1
# effectuera un tunnel de M0:1234 vers M1:80 en passant par M1:22 ("localhost" comme destination sera le localhost du serveur intermédiaire)

M0:$ ssh -L 1234:M1:80 M1 :-/
# La connexion est identique mais utilisera l'adresse de la M1 (interface réseau ) plutôt que l'interface lo.

M0:$ ssh -L 1234:M0:80 M1
# La commande connecte M1 sur M0:80.

M0:$ ssh -L 1234:M2:80 M1
# Il y aura une connexion (un tunnel créé) entre M0 et M1 mais la redirection est effectuée entre M1:1234 et M2:80 en utilisant M1:22. 
# Les transactions sont chiffrées entre M0 et M1, mais pas entre M1 et M2, sauf si un second tunnel ssh est créé entre M1 et M2.

# redirections distantes
M0:$ ssh -R 1234:HOSTNAME:80 M1

# Ici M0 à le serveur TCP, il sert donc de relais entre une connexion M1:1234 et HOSTNAME:80. La connexion est chiffrée entre M1 et M0. 
# Le chiffrement entre M0 et HOSTNAME dépend de la liaison mise en place.

M0:$ ssh -R 1234:localhost:80 M1

# Cela ouvre une connexion depuis M1:1234 vers M0:80 car localhost correspond, ici, à M0.
# Si un utilisateur passe une requête sur M1:1234, elle sera redirigée vers M0:80.

M0:$ ssh -R 1234:M2:80 M1

# Cela ouvre une connexion entre M0 et M1:22, mais les requêtes allant de M1:1234 sont redirigés sur M2:80.
# Le canal est chiffré entre M1 et M0, mais pas entre M0 et M2.

# (voir http://www.linux-france.org/prj/edu/archinet/systeme/ch13s04.html)
# option ssh -NfL pour envoyer en background et quitter automatiquement

# --- redirection avec socat (socket cat) vers un port d'un serveur distant
### socat sert principalement à relayer deux flux de données de manière bidirectionnelle
sudo socat tcp-listen:8000,reuseaddr,fork tcp:192.168.1.1:8000
### voir http://www.dest-unreach.org/socat/doc/socat.html#EXAMPLES

# --- atteindre sergecouture.ddns.net depuis mapvpn20
 ssh -p 65022 bidule2.ddns.net
ou
 sudo route del default
 sudo socat tcp-listen:65022,reuseaddr,fork tcp:bidule2.ddns.net:65022
 sudo socat tcp-listen:65022,reuseaddr,fork tcp:bidule3.ddns.net:65022
et se connecter à mapvpn20:65022 qui redirigera...

# --- voir les clés publiques ssh d'un serveur
ssh-keyscan qxacmsw20.pra.shq.local

# --- afficher le ssh server key fingerprint
file=$(mktemp)
ssh-keyscan qxacmsp20.pra.shq.local > $file 2> /dev/null
ssh-keygen -l -f $file

# --- Déterminer le nombre de processeurs ---
grep processor /proc/cpuinfo

# --- voir les process qui écoutent et les adresses/ports associés ---
netstat -nltp
ss -nltp

# --- netstat qui affichera le timer de fermeture des connexions
netstat -ano

# --- activer pgup/pgdn search dans history ---
cat >> /etc/inputrc <<EOF
"\e[5~": history-search-backward
"\e[6~": history-search-forward
EOF
bind -f /etc/inputrc
# pour reloader ce fichier ou redémarrer la session
# Pour lister les binds actuels:
bind -p

# --- bash command line editing
alt-d delete next word
alt-t swap 2 words
alt-. print last argument from previous command
ctrl-flèches pour se déplacer d'un mot à un autre
ctrl-y yank
export EDITOR=vim
ctrl-x ctrl-e copie la ligne actuelle et ouvre l'éditeur $EDITOR pour ensuite l'exécuter


# --- monitorer un process via un "top" sélectif ---
top -p $(pgrep ndsd)

# --- changer l'affichage du memory unit dans TOP
# presser la touche E
# presser la touche W pour write dans ~/.toprc

# --- pour exécuter quelque chose au démarrage via cron ---
# à mettre dans crontab:
@reboot script-a-executer.sh

# --- si problèmes avec VI sous Solaris (déplacements de souris pas permis) ---
export TERM="xterm"

# --- fichier de configuration de JBoss ---
vi /opt/jboss/bin/run.conf

# --- envoie de fichiers sur GetInHere ---
d:\App\putty\pscp d:\vibe\images\shq\*.png shqsrc@qxpgih01.be.shq.local:/home/shqsrc/vibe

# --- timezone de tomcat ---
fichier catalina.sh dans répertoire bin de tomcat
changer  -Duser.timezone=America/Montreal

# --- pour voir les process qui font beaucoup d'io ---
# installer iotop (utilise python-curses)
iotop

# --- continuation d'un ligne trop longue ---
grep -i -r \
"stuff"
# en DOS, on peut aussi le faire mais il faut employer le caractère ^ (accent circonflexe)

# **** DOS ****
# pour shutdown de la machine dans 1200 secondes... affiche une fenêtre avec le message de shutdown dans xx minutes
shutdown -s -t 1200 -c "L'ordinateur sera arrêter dans 20 minutes."

# pour arrêter le shutdown pending...
shutdown -a

# --- Création d'un disque /DATACMS en LVM sur /dev/sdc
# étape 1 - création d'une partition unique /dev/sdc1 de type 8e
fdisk /dev/sdc <<FIN
n
p
1


t
8e
w
FIN

# étape 2 - création d'un volume physique LVM utilisant la partition créé
pvcreate /dev/sdc1
# création d'un volume group LVM
vgcreate volgrp_03 /dev/sdc1
# affichage du volume physique LVM et du volume group créés
pvdisplay

# étape 3 - créer volume LVM "lv_data" sur le volume group créé, utiliser 100% de son espace
lvcreate --name lv_data -l 100%FREE volgrp_03

# étape 4 - créer le filesystem sur ce volume
mkfs.ext4 /dev/volgrp_03/lv_data

# étape 5 - créer le mount point, ajuster fstab et monter
mkdir /DATACMS
vim /etc/fstab
# ajouter cette ligne
/dev/mapper/volgrp_03-lv_data /DATACMS                  ext4     defaults        0 0

# faire le mount et mettre un lien symbolique
mount -a

# --- EXTENSION d'une partition LVM existante ---

# 1) ajouter expace disque par VMware
# rescan du disque...
echo 1 > /sys/block/sdX/device/rescan # where X is b/c/d/whatever your disk is
# fdisk partition, créer partition primaire de type 8e (ex: sdf)
fdisk /dev/sdf
# si erreur à l'écriture de la table de partition (le kernel indique que le device is busy, new table will be use on next reboot)
partprobe

# 2) créer le volume physique
pvs
pvcreate /dev/sdf1
pvs

# 3) Ajouter le nouveau LVM Physical Volume au Volume Group
vgs
vgextend reload-data /dev/sdf1
vgs

# 4) Expansion du Logical Volume à 100% de l'espace free
lvs
lvdisplay
# noter le path du volume logique à étendre: /dev/... (ligne LV Path)
lvextend -l +100%FREE /dev/reload-data/lvdata
lvs

# 5) Resize du file system EXT3 du volume linux
# 5.1) déterminer le type de file system à extensionner
cat /etc/fstab
# 5.2) ext3 ou ext4:
df -h
resize2fs -p /dev/reload-data/lvdata
df -h
# ou si XFS:
xfs_growfs /var

# --- AJOUT d'un disque et d'une partition LVM ---

# 1) ajouter expace disque par VMware
# rescan du disque...
for HOST in /sys/class/scsi_host/host* ; do echo "- - -" > $HOST/scan ; done
# fdisk partition, créer partition primaire de type 8e (ex: sdf)
fdisk /dev/sdc
# si erreur à l'écriture de la table de partition (le kernel indique que le device is busy, new table will be use on next reboot)
partprobe

# 2) créer le volume physique
pvs
pvcreate /dev/sdc1
pvs

# 3) Ajouter le nouveau LVM Physical Volume au Volume Group
vgs
vgcreate volgrp_03 /dev/sdc1
vgs

# 4) Expansion du Logical Volume à 100% de l'espace free
lvs
lvdisplay
lvcreate -n lv_bkp -l 100%FREE volgrp_03
lvdisplay volgrp_03/lv_bkp

# 5) Création du file system XFS du volume linux
mkfs.xfs /dev/volgrp_03/lv_bkp
mkdir /backup
mount /dev
# ou ajuster /etc/fstab et mount -a




# --- autres commandes LVM ---
pvscan
lvscan
pvdisplay
lvdisplay


# --- informations hardware ---
lspci
lsmod
systool
dmesg
lsusb
lsscsi
scsi_id
blkid

# --- ndsrepair graphique ---
ndsgrepair

# --- ssh passwordless ---
ssh-keygen -t rsa
ssh-copy-id -i ~/.ssh/id_rsa.pub root@qxpclu04

# --- ldapsearch ---
# lister tous les attributs d'une catégorie d'objet (à partir d'un serveur ayant une réplique edir)
ldapsearch -x -h localhost  -LLL "(objectclass=Person)"|grep ":"|cut -d: -f1|sort|uniq> attributes

# lister que certains attributs pour les usagers
ldapsearch -x -h localhost  -LLL "(objectclass=Person)" givenName fullName cn ou telephonenumber ou

# --- Apache top ---
apachetop -f /var/log/httpd/intranet_access_log
(package pas nécessairement installé)

# --- trafic interface réseau ---
iftop

# --- debug application ---
strace -e open telnet qxpgwy03.fep.shq.local 25
strace -ff -o /tmp/trace.txt telnet qxpgwy03.fep.shq.local 25
strace -fp 816 o /tmp/trace.txt

# --- heure en UTC au lieu de Local
vim /etc/sysconfig/clock
UTC=false

# --- forward de email à un compte externe du serveur ---
vim /root/.forward
serge.couture@shq.gouv.qc.ca

# --- action lors du redémarrage du serveur ---
echo "mount /mnt/pointDeMontage1" >> /etc/rc.local
# certaines distribution Linux utilisent /etc/rd.d/rc.local (faire un lien symbolique)

# --- email lors du redémarrage du serveur ---
#mettre la ligne suivante à la fin du fichier /etc/rc.local pour recevoir un email au reboot
echo "`hostname` is UP"|sendmail serge.couture@shq.gouv.qc.ca

# --- traduction d'une date en "unix timestamp" en "human readable"
cat nagios.log | perl -pe 's/(\d+)/localtime($1)/e'

# find poussé...
# fera comme un grep -r mais permet d'exécuter d'autres commandes.
find . -exec grep -ls 9880 {} \;

# --- pour changer le mot de passe oublié de root ---
# booter avec un dvd bootable et modifier /etc/passwd et /etc/shadow
#      ou
# booter le serveur et au menu de Grub, modifier la ligne de lancement pour ajouter "1" à la ligne d'option
# on sera en runlevel 1 (donc root sans demande de mot de passe). Faire passwd par la suite.

# --- pour tester SNMP ---
snmpwalk -v 1 -c public localhost IP-MIB::ipAdEntIfIndex
snmpwalk -v2c -c C0mmun1Ty localhost | less
# uptime d'un commutateur Cisco
snmpget -v2c -c Rene 10.100.206.19 .1.3.6.1.6.3.10.2.1.3.0

# --- changer ownership d'un lien symbolique ---
chown -h apache:apache /var/www/vh/rthq/public/typo3_src
# ne pas mettre le "/" final (important)

# --- couleurs ---
# le fichier /etc/DIR_COLOR contient les codes de couleurs utilisés par la commande ls 
# et des indications pour les codes de couleurs
# pour mettre de la couleur dans un fichier de texte (ici rouge sur fond noir)
echo -en "\033[31;40m" >> /etc/motd
echo "Attention à ce que vous faites..." >> /etc/motd
echo -en "\033[0m" >> /etc/motd

# --- diff de fichiers sur 2 serveurs ---
ssh qxdjas01 "cat /opt/tomcat/conf/server.xml"|diff -y -W 160 - server.xml|less
# les lignes avec "|" au milieu diffèrent, celles avec un < ou un > sont unique à un ou l'autre

# en fonction (pour un genre d'alias de command line)
function xdiff() { file=$(readlink -e $1); server=$2; shift; shift; ssh $server "cat $file" | diff $@ -W $COLUMNS "$file" - ; }
xdiff /etc/opt/novell/cifs/cifsctxs.conf mxpclu04

function dircomp() { CMD="ls -l $(readlink -e $1)"; ssh $2 $CMD >/tmp/2; $CMD >/tmp/1; diff -y -W 150 /tmp/{1,2}; rm /tmp/{1,2}; }
dircomp . mxprel03

# --- diff en ignorant les lignes de commentaires
diff -I "#.* -w -y copy.ksh copy2.ksh

# --- diff de 2 commandes en utilisant le process substitution (voir http://mywiki.wooledge.org/ProcessSubstitution)
diff -w -y <(ls -l /dir1) <(ls -l /dir2)

# --- voir plusieurs fichiers côte à côte side by side
pr -t -m -w $COLUMNS fichier1.txt fichier2.txt | less
ou encore (parce que pr ne se comporte par toujours de façon identique d'un linux à un autre)
paste <(cat /tmp/c045.txt) <(cat /tmp/8101.txt) | column -s $'\t' -t

# --- information process (structurée) ---
pstree -a -l -p

# affichage de la structure de répertoire
tree -C
tree -p # affichera les permissions des répertoires et fichiers
tree -u -g # affichera le user et group propriétaire

# --- problème à télécharger des fichiers (certificat ssl WebSense)---
echo "insecure" > ~/.curlrc
echo "check_certificate=off" > ~/.wgetrc
# pour npm faire:
npm config set strict-ssl false
ou, pour télécharger de http au lieu de https:
npm config set registry http://registry.npmjs.org/
# pour gem (ruby):
echo ":ssl_verify_mode: 0" >> ~/.gemrc



# --- xen ---

xm list
xm info

voir aussi ligne de chargement du kernel dans /boot/grub/menu.lst :
param. dom0_mem=  dom0_vcpus_pin dom0_max_vcpus

# --- tester la connectivité à une adresse/port sans telnet ---
nc -v 10.100.52.176 1521

# --- voir les différents timestamps d'un fichier
stat fichier.txt

# --- infos sur le file system
stat -f /data

# --- lister les process qui démarrent automatiquement sur le serveur (pour le runlevel courant) ---
chkconfig --list|grep `runlevel|cut -d' ' -f2`:on --color=always|sort
chkconfig --list|grep `runlevel|cut -d' ' -f2`:on --color=always|less -R

# --- pour savoir qui s'est connecté au serveur, d'où et quand ---
last

# --- pour voir des informations sur la connexion NFS possible ---
showmount -e qxpnfs01.corp.shq.local
# va afficher les mount possibles à partir de ce serveur
rpcinfo -u qxpnfs01.corp.shq.local nfs  (ou -t pour tcp)
# ou
rpcinfo -u qxpnfs01.corp.shq.local mountd
# voir les programmes enregistrés dans remote procedure call du serveur distant
# si on exécute sur le serveur nfs cette commande
rpcinfo -q qxpnfs01.corp.shq.local
# on verra les programmes enregistrés dans remote procedure call du serveur 
# (visibles aux autre si les ports affichés sont ouverts)

# --- date formattée ISO ---
date +"%F %T"

# --- history avec date time ---
# dans /etc/bashrc ou mieux, dans /etc/profile.d/history.sh
cat >> /etc/profile.d/history.sh <<FIN
HISTTIMEFORMAT=\${HISTTIMEFORMAT:-"%F %H:%M:%S "}
FIN

# --- pour ignorer certaines lignes dans le history
echo $HISTCONTROL
# si ignorespace alors ignore les lignes débutant par un espace
# si ignoredups alors ignore les lignes en double (même commandes plusieurs fois en lignes)
# si ignoreboth alors ces deux cas


# --- conversion heure en format Unit time (secondes depuis 1er janvier 1970)
date -u --date="1970-01-01 1402999219 sec GMT"
# où 1402999219 est la date que l'on veut convertir
date --date="Wed Aug 22 07:51:04 UTC 2007" +%s
# pour convertir une date dans le format Unix time

# --- durée d'exécution dans BASH avec la variable spéciale SECONDS
SECONDS=0
# do some work
duration=$SECONDS
echo "$(($duration / 60)) minutes and $(($duration % 60)) seconds elapsed."


# --- enable snmp dans iptables
iptables -I INPUT -p udp -m udp --dport 161 -j ACCEPT
iptables -I INPUT -p udp -m udp --dport 162 -j ACCEPT
iptables-save > /etc/sysconfig/iptables
service iptables restart

# --- jar files pour tomcat
# pour créer un fichier jar 
cd /opt/tomcat/webapps/pwm; /opt/jdk/bin/jar cvf /root/pwm.war .
# pour l'extraire dans un dossier spécifique
mkdir /root/pwm; cd /root/pwm; /opt/jdk/bin/jar xvf /root/pwm.war


# --- completition pour nom de répertoire ou de fichier
complete -d cd
complete -f vim

# --- régler l'heure d'un serveur linux
service ntpd stop
ntpdate 10.100.120.1
service ntpd start

# --- vérifier la synchronisation du temps
ntpq -pn

# --- variable d'environnement de réglage de less
export LESS='-C -M -I -j 10 -# 4'

# --- less avec de longues lignes sans wrap
less -S fichier
# ou dans less, taper -S
# ou utiliser la variable d'environnement LESS comme suit
LESS=-S
# pour changer la valeur du 'horizontal shift' dans less, faire
-#10
# pour ne pas effacer l'écran en quittant
-F

# --- recherche case insensitive lorsque dans less ---
# taper "-i"+enter

# --- afficher une structure arborescente des disques/partitions
lsblk
# avec affichage du filesystem
lsblk -f (ou --fs)
#--- lister les disques, leur partition, UUID, ...
lsblk -o +uuid,name
tree /dev/disk

# --- yum pour télécharger package et dépendances + installation locale
# attention: fait le download de toutes les dépendances, aucune vérification si elles sont déjà installées ou pas
yum repotrack mutt
yum localinstall mutt

# --- yum pour chercher qui fournit tel programme
yum provides javac

# --- yum désinstallation d'un ou plusieurs packages
yum remove tomcat*

# --- yum download and install all available security updates
yum -y update --security

# --- yum download only package
yum install vsftpd --downloadonly --downloaddir=/tmp

# --- historique de yum
yum history

# --- yum update sauf certains package
yum update --exclude kernel

# --- yum list les packages et repository d'où il provient
yum list installed *openjdk*

# --- yum voir les script du package ou fichier
rpm -q --scripts httpd
rpm -qp --scripts filename.rpm

# --- pour relire .bashrc
source ~/.bashrc

# --- Certificat pour applications Java
# lister les certificats des serveurs qxa*
keytool -list -v -keystore  ~/jssecacerts | grep Alias | grep "qxa"
# détruire un certificat de la liste précédente
keytool  -delete -alias qxaaut01.apa.shq.local-1 -keystore ~/jssecacerts
# ajouter le nouveau certificat
java -jar InstalCert.jar qxaaut01.apa.shq.local:443
# copier le keystore au bon endroit
find / -name jssecacerts
cp -p ~/jssecacerts (endroits spécifiés à la ligne précédente)
service tomcat restart

# --- Lister les modules chargés d'Apache
apachectl -t -D DUMP_MODULES
# ou
httpd -M

# --- demander à Apache de relire ses fichiers de configuration
apachectl graceful
# ou (utile pour docker)
httpd -k graceful

# --- Comment ne pas logger des accès de Zabbix dans les logs d'apache
SetEnvIf Remote_Addr "10\.100\.120\.97" dontlog
CustomLog logs/ip_access_log Combined env=!dontlog


# --- déterminer l'encodage d'un fichier
file -bi fichier

# --- changer l'encodage d'un fichier
iconv -f iso-8859-1 -t utf8 fichier1 -o output.file

# --- vérification qu'un service tcp fonctionne
lsof -i :8500; netstat -tulpn | grep 8500
# donnera par exemple:
COMMAND   PID   USER   FD   TYPE  DEVICE SIZE/OFF NODE NAME
java    29111 tomcat  164u  IPv6 1171745      0t0  UDP qxawac01.apa.shq.local:fmtp
udp        0      0 10.100.66.77:8500       :::*                                29111/java

# --- vérifier quel user/process utilise un port tcp
fuser -v -n tcp 80

# --- afficher quel user/process utilise un fichier
fuser -v /var/log/messages

# --- afficher quel user/process utilise un file system
fuser -u -m /media/nss/ORADEV1

# --- créer un fichier ASCII avec un contenu aléatoire
base 64 /dev/urandom | dd of=/tmp/1mb.txt bs=1024 count=1024
# fichier 1MB

# --- lister les connexions ouvertes sur un protocole sur un serveur
# exemple ici le port 80
netstat -tn | egrep "^tcp.*:80" | tr -s " " | cut -f6 -d " " | sort | uniq -c
# peut permettre de voir le nb de connexion sur GW (1678), eDirectory(524), LDAP (389/636), un proxy(80), ajp(8009)...
# on peut même le faire avec un watch
watch -n1 'netstat -tn | egrep "^tcp.*:80" | tr -s " " | cut -f6 -d " " | sort | uniq -c'
# pour voir qui est connecté par ce port, changer "-f6" par "-f5,6"

# --- alias si pas root pour certaines commandes
# dans ~/.bashrc par exemple
if [ $UID -ne 0 ]; then
    alias reboot='sudo reboot'
    alias update='sudo apt-get upgrade'
fi

# --- treesize 
# en session graphique / Xming, utiliser baobab
# sinon, ce script:
#/bin/sh
du -k -x --max-depth=1 $1 | sort -nr | awk '
     BEGIN {
        split("KB,MB,GB,TB", Units, ",");
     }
     {
        u = 1;
        while ($1 >= 1024) {
           $1 = $1 / 1024;
           u += 1
        }
        $1 = sprintf("%.1f %s", $1, Units[u]);
        print $0;
     }
    '
# ou, sur une ligne:
du -k -x --max-depth=1 | sort -nr | awk 'BEGIN { split("KB,MB,GB,TB", Units, ","); } { u = 1; while ($1 >= 1024) { $1 = $1 / 1024; u += 1 } $1 = sprintf("%.1f %s", $1, Units[u]);  print $0; }'
# ou, avec tree:
tree . --du -h
tree . --du -h | grep G] pour avoir les plus gros seulement...


# --- Red-Hat 7 - Systemctl, iptables équivalents...

# équivalent de chkconfig --list|grep snmp
systemctl list-unit-files |grep snmpd

# équivalent de iptables -L
firewall-cmd --list-all

# lister les services tcp et udp connus du firewall
firewall-cmd --get-services

# ajouter un service tel que listé par la commande prcédente
firewall-cmd --add-service rpc-bind --permanent
firewall-cmd --add-service nfs --permanent
firewall-cmd --add-service mountd --permanent

# ajouter un port permis au firewall
firewall-cmd --add-port 161/udp --permanent

# retirer un port permis au firewall
firewall-cmd --remove-port 161/udp --permanent

# rendre effectif les changements "--permanent" du firewall
firewall-cmd --reload

# ------------------------------------


# exécution de commandes simultanées sur plusieurs serveurs
# (à partir de qxpoes01)
cssh oes
cssh gw
# voir /etc/clusters pour la liste des "clusters" prédéfinis


# sudo à un autre utilisateur pour le temps d'une commande
sudo -H -u nagios bash -c 'echo "I am $USER, with uid $UID"'

# search & replace avec sed
sed -i 's/function1/function2/g' *.java

# enlever les lignes vides d'un fihcier
sed -i '/^$/d' fichier

# changer la valeur du champ timeout de Zenworks config.xml
sed -i -E '/timeout/,/value/  s/30/-1/' config.xml

# search & replace recursif sur les fichiers config.xml
find . -name config.xml -exec sed -i 's,/jenkins-workspaces/Simpana,/jenkins-workspaces/simpana,g' '{}' \;

# search & replace avec perl et conserver backup
perl -p -i.bak -e "s/top\.close\(\)/javascript\:top\.quitErr\(\)/g" *.html


# --- envoi d'un courriel de test (postfix) ---
echo "Subject: test $(date +%T)"|sendmail  serge.couture@shq.gouv.qc.ca
# avec sujet et contenu d'un fichier:
echo "Subject: test $(date +%T)"| cat -  /tmp/Longueur-qxpcldata.txt |sendmail  serge.couture@shq.gouv.qc.ca
# avec sujet et résultat d'une commande:
(echo "Subject: cluster status sur cluster GroupWise $(date +%T)" ; cluster status) |sendmail serge.couture@shq.gouv.qc.ca sergecouture@icloud.com 

# ou envoi avec pièce jointe à $USER
(printf "%s\n" \
    "Subject: test" \
    "To: $USER" \
    "Content-Type: application/zip" \
    "Content-Disposition: attachment; filename=foo.zip" \
    "Content-Transfer-Encoding: base64" \
    "";
 base64 foo.zip) | sendmail "$USER"
# voir aussi script de longueur de nom de fichier sur qxpclu03/04 dans /opt/shq

# --- déterminer le mimetype d'un fichier
file -b --mime fichier

# --- mettre en minuscule le contenu d'une variable
NOM=`echo $NOM | tr  '[:upper:]' '[:lower:]' `

# --- utiliser netcat pour envoyer des paquets en UDP
echo -n "foo" | nc -4u -w1 <host> <udp port>

# --- voir les idle connections sur le firewall Cisco
Monitoring - Properties - Connections et mettre un filtre sur la destination

# --- logger les actions et les output d'une série de commandes
script ~/post-installation.txt
(commandes...)
exit

script -a ~/post-installation.txt -c "yum update"

# --- lsof our savoir qui utilise un répertoire
lsof +D /data
regarder qui a DIR inscrit dans la 4e colonne

# --- lsof pour voir qui utilise des exécutables d'un répertoire
lsof +D /usr/sbin

# --- voir les fichiers ouverts d'un PID
lsof -p 999

# --- voir les fichiers ouverts d'un utilisateur
lsof -u nagios

# --- pour trouver les fichiers effacés dont l'espace n'a pas été récupéré
# (ex: toujours utilisé par un service mais logs deleted par exemple)
lsof +aL1 /

# --- pipe de lsof pour kill
kill -9 `lsof -t -u nagios`

# --- kill interactif de tous les process portant un nom 
killall -i zabbix-agent
# on peut aussi utiliser un regexp avec -r

# --- synchronisation entre 2 répertoires local
rsync -av --delete /zcm/ /zcm2/
# avec --dry-run, affichage de ce qui serait fait seulement, pas d'action
# avec -i output a change-summary for all updates
rsync -a -i --delete --dry-run --log-file=/var/log/rsync-data2.log /media/nss/DATA2/ /media/nss/DATA2NEW/

# rsync entre 2 serveurs
rsync -av --delete -e ssh /home1 root@qxdnfs20:/home1

# ls formatté pour date complète
ls -l --full-time

# --- firewalld
firewall-config
firewall-cmd --list-all
firewall-cmd --reload
firewall-cmd --add-port 30013/tcp
firewall-cmd --add-port 30013/tcp --permanent
firewall-cmd --remove-port 30014/tcp

# --- firewalld pour NFS
firewall-cmd --permanent --add-service rpc-bind
firewall-cmd --permanent --add-service nfs
firewall-cmd --permanent --add-service mountd
# pour nfsv3, il faut aussi:
firewall-cmd --permanent --add-port 32803/tcp
firewall-cmd --permanent --add-port 32769/udp
firewall-cmd --permanent --add-port 892/tcp
firewall-cmd --permanent --add-port 662/tcp
firewall-cmd --reload


# --- temps d'exécution d'une commande
time du -sh /


# pour recherche... extension disque sbd1 type ext3
# 1) Check du file system
e2fsck -f -y -v -C 0 /dev/sdb1
# 2) expansion
resize2fs -p /dev/sdb1

# --- renommer un fichier
mv /path/filename.{old,new}
# après expansion, la commande sera mv /path/filename.old /path/filename.new


# --- client NFS
yum install -y nfs-utils nfs-utils-lib
service portmap start
# au besoin, ajuster par chkconfig ou autre pour démarrage automatique


# --- problème de lenteur à la connexion à un serveur (relié à problème de DNS)
# même si dns configuré correctement
vim /etc/nsswitch.conf
# voir la ligne
hosts file dns
# enlever "merde" autre que ces deux options...

# --- maj SLES/OES avec zypper

zypper update
>There are some running programs that use files deleted by recent upgrade. You may wish to restart some of them. 
>Run 'zypper ps' to list these programs.


# --- lecture / écriture dans un socket file (clamd)
echo -e "SCAN /tmp/eicar.com.txt" | nc -U /var/run/clamd.scan/clamd.sock
# dans le cas de clamd, on peut aussi lui parler via le port tcp 3310
echo -e "PING" | nc 127.0.0.1 3310
echo "VERSION" | nc localhost 3310
echo "VERSION" | nc -U /var/run/clamd.scan/clamd.sock
# il faut savoir les commandes que le process qui y est attaché peut exécuter...!

# --- reformatter un fichier xml pour le rendre plus lisible
xmllint --format ugly.xml --output pretty.xml

# --- If you still cannot unmount the fs, or fuser hangs, try the "lazy" option to umount:
umount -f -l /mnt

# --- outils pour diagnostiquer ssl
# montrer les détails des éléments supportés et utilisés lors d'une connexion ssl
sslscan --no-failed accesdistant.habitation.gouv.qc.ca

# --- installation de ssldump
# installation du repo EPEL
rpm -ivh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
yum install ssldump

# --- dump des sessions ssl sur le port 443
ssldump  -dX -VVV port 443
# --- capture et dump de ssl
ssldump -a -A -d -H -i eth0

#si erreur de capture "ERROR: Length mismatch" on peut passer par tcpdump:
tcpdump -s 0 -w /tmp/ssldump.cap
ssldump -a -A -d -H -k /etc/pki/tls/private/localhost.key -f /tmp/ssldump.cap |less

# Utilisation d'un script nmap pour scanner le site et montrer les ciphers acceptés:
[root@qxpcron20~] nmap --script ssl-enum-ciphers.nse -p 443 dev-bsi.cogiweb.com

# ou via sslscan
sslscan --no-failed bsi.cogiweb.com

# lister les ciphers connus par la version utilisée de openssl
openssl ciphers -v 

# tester si un protocole d'encryption est utilisé
openssl s_client -connect 10.100.35.55:443 -ssl3  ou
openssl s_client -connect 10.100.35.55:443 -tls1
affichera:
(...)
-----END CERTIFICATE-----
subject=/C=CA/ST=Quebec/L=Quebec/O=Gouvernement du Quebec/OU=SHQ/CN=partenaires.acc.shq.local
issuer=/C=CA/ST=Quebec/L=Quebec/O=Societe Habitation Quebec Certificat Interne/OU=SHQ Interne/CN=SHQ Certificat Interne
---
No client certificate CA names sent
---
SSL handshake has read 1289 bytes and written 431 bytes
---
New, TLSv1/SSLv3, Cipher is RC4-MD5
Server public key is 2048 bit
Secure Renegotiation IS NOT supported
Compression: NONE
Expansion: NONE
SSL-Session:
    Protocol  : TLSv1
    Cipher    : RC4-MD5
    Session-ID:
    Session-ID-ctx:
    Master-Key: B70EA34A78A3BFFC0ACA6CA4CC0530066F6239AB3E72AB62CD8A585D0C4320F8520C82A76B9B53256293A73F7B13236B
    Key-Arg   : None
    Krb5 Principal: None
    Start Time: 1439330638
    Timeout   : 300 (sec)
    Verify return code: 21 (unable to verify the first certificate)
---

# voir aussi testssl.sh, script à télécharger depuis https://testssl.sh


# --- convertisseur ASCII -> HTML
# aha, sur https://github.com/theZiz/aha

# --- répertoire des services sous systemd
cd /usr/lib/systemd/system

# --- lister les HBA d'un serveur (cartes FC)
systool -c fc_host

# --- lister les WWN d'un serveur
cat /sys/class/scsi_host/host*/device/fc_host/host*/port_name
# ou
systool -c fc_host -v | grep port_name

# --- montrer devices vs disk size
lsscsi -s

# --- lister les adresses wwn des disques du SAN
ls -lah /dev/disk/by-id

# --- réglage de http_proxy
export http_proxy=http://httpproxy:3128
export https_proxy=https://httpproxy:3128
export no_proxy="127.0.0.1, localhost, *.cnn.com, 192.168.1.10, domain.com:8080"


# --- disable ipv6 sur RedHat 7
cat > /etc/sysctl.d/ipv6.conf <<FIN
# To disable for all interfaces
net.ipv6.conf.all.disable_ipv6 = 1
FIN

sysctl -p /etc/sysctl.d/ipv6.conf
dracut -f

# --- un "top" plus évolué
htop

# --- un "top" pour les IO sur disque
iotop

# --- corriger problème systemctl
systemctl reset-failed

# --- divers sur systemd
systemd-cgtop
systemd-cgls

# --- tail de plusieurs fichiers
tail -f /var/log/*
# ou beaucoup mieux, multitail
yum install epel-release
yum install multitail 
multitail /var/log/messages /var/log/auth.log
# pour voir un fichier et le output d'une commande (ou plus!)
multitail /var/log/iptables.log -l "ping server.nixcraft.in"
multitail -s 2 /var/log/cas/cas.log /opt/tomcat/logs/catalina.out
# color scheme...
multitail -cS tcpdump -l "tcpdump -A -s4096 not port 22"
# si pas le lignes pour les fenêtres, faire:
export TERM=linux

# --- proxy sortant lorsque websense nous bloque
# sur qxdpxe01.dev.shq.local port 8080
vim /etc/httpd/conf.d/mod_proxy.conf
# débloquer le:
allow from 192.168.200.241 
apachectl graceful

# --- bash en mode debug
bash -x script.sh

# --- Size des databases MySql
SELECT table_schema "DB Name", 
   Round(Sum(data_length + index_length) / 1024 / 1024, 1) "DB Size in MB" 
FROM  information_schema.tables 
GROUP  BY table_schema;

# --- quelques commandes MySQL / MariaDB
select host,user from mysql.user;
show databases;
use nom_database;
show tables;
describe nom_table;
delete from be_users where username='admin';

# --- debug des commandes envoyées à Mysql
mkdir /var/log/mysql
chown mysql:mysql /var/log/mysql
mysql -u root -p
SET GLOBAL general_log_file='/var/log/mysql/mariadb.log';
(ce n'est pas permanent, un restart du serveur lui reset le nom du fichier)
(sinon modifier mysql.cnf)
SET GLOBAL log_output = 'FILE';
SET GLOBAL general_log = 'ON';
SHOW VARIABLES LIKE "general_log%";
# Try to execute your own SQL query from your app or command-line tool...
less /var/log/mysql/mariadb.log
SET GLOBAL general_log = 'OFF';
(ce n'est pas permanent)

# --- Copie d'un BD mysql d'un serveur à un autre
# use only if you are using VPN or trust your network:
$ mysqldump db-name | mysql -h remote.box.com db-name

# Use ssh if you don't have direct access to remote mysql server (secure method):
$ mysqldump db-name | ssh user@remote.box.com mysql db-name

# Dump du schéma seulement
mysqldump --no-data db-name

# --- Exécution d'une requête sql directement via le command line 
mysql -u root -p prod_int < demande1.sql  > resultat1.txt

# --- rafraichissement exports nfs
exportfs -ra

# -- agrandissement d'un volume XFS avec SLES
# procéder par Yast - System - Partitionner
# Vous devrez avoir démonté le volume auparavant!

# --- forcer le logrotate (exécution manuelle)
/usr/sbin/logrotate /etc/logrotate.conf

# --- Liste des fichiers qui sont ouvert mais effacés (ex: suite à un yum update)
lsof | grep deleted
# ou
lsof +c0 -d DEL | grep -v '\s/SYSV' |awk 'NR==1 || !/dev\/zero/ {print $2,$1,$4,$NF}' | column -t
# ou sur SLES
zypper ps


# --- SELinux est-il effectif?
sestatus
getenforce


# --- disable permanent de SELinux
sed -i 's/^SELINUX=permissive/SELINUX=disabled/g' /etc/selinux/config
(reboot pour activer)

# --- download de packages non 	standard SLES mais dans openSUSE
aller dans https://software.opensuse.org/search et entrer le rpm cherché ex: ssldump
cliquer sur "Afficher les autres versions" et choisir SUSE SLE-11 SP4 puis cliquer sur le lien du 64 bits pour le rpm
ne pas utiliser le .ymp ou si oui, utiliser la commande OCICLI (One Click Install CLI) pour installer avec le .ymp

# --- Raccourcis Kitty
# Ctrl-Shift Click duplique la session
# Shift-F3 ouvre WinSCP

# --- Capture tcpdump live dans Wireshark
C:\APPS\Kitty\klink -ssh root@qxacmsw20.pra.shq.local "tcpdump -ni eth0 -s 0 -w - not port 22" | "c:\Program Files\Wireshark\Wireshark.exe" -k -i -
# Il faut arrêter Wireshark pour arrêter le pipe entre klink tcpdump et wireshark par un ^C

# --- Capture sur 2 serveurs simultanément puis analyse dans Wireshark avec plink
1) créer ce batch file c:\apps\capture.cmd
@echo off
rem %1=serveur
rem %2=nb secondes de capture (optionnel)
set OUTPUT=c:\temp\%1.cap
if "%1"=="" exit
if not "%2"=="" set OPT=timeout %2 
echo Capture sur %1 %OPT%dans %OUTPUT%
C:\APPS\Kitty\klink -ssh root@%1 "%OPT% tcpdump -ni eth0 -s 0 -w - not port 22" > %OUTPUT%
exit

2) créer ce batch file c:\apps\wshark2.cmd
@echo off
rem %1=serveur1
rem %2=serveur2
rem %3=nb secondes de capture (optionnel)
set OUTPUT=c:\temp\all.cap
if "%2"=="" exit

start /min c:\apps\capture.cmd %1 %3
start /wait c:\apps\capture.cmd %2 %3
"c:\Program Files\Wireshark\mergecap.exe" -w %OUTPUT c:\temp\%1.cap c:\temp\%2.cap
"c:\Program Files\Wireshark\Wireshark.exe" -r c:\temp\all.cap

3) lancer la capture avec en option un timeout
c:\apps\wshark2 qxaweb24.fea.shq.local qxacmsw20.pra.shq.local 30

4) vous pouvez modifier le 2e batch file pour boucler et capturer plus de 2 serveurs!

# --- Rsync de fichiers de configuration sur 2e serveur apache
# sur qxaweb24
cd /etc/httpd/conf.d
rsync -Pav *.conf qxaweb25:$(pwd)

# --- Erreurs Apache 500 trappée sur le 1er niveau de proxy => comment voir la vrai erreur
commenter l'option ProxyErrorOverride on (ou mettre à off) dans le virtual host du serveur proxy
remettre à on pour les opérations normales...

# --- Copie d'un fichier d'un serveur dans FEA vers un autre dans FEP sans règle de firewall
# avec plink:
C:\Windows\System32>plink -ssh root@qxaweb24.fea.shq.local cat /etc/httpd/conf/httpd.conf | plink -ssh root@qxpweb24.fep.shq.local "cat - > /etc/httpd/conf/httpd.conf"
# avec ssh depuis un serveur en production (ex: qxpcron20)
ssh root@qxaweb24.fea.shq.local cat /etc/httpd/conf/httpd.conf | ssh root@qxpweb24.fep.shq.local cat - \> /etc/httpd/conf/httpd.conf

# --- Apache: comment ne pas logger basé sur l'adresse ip
SetEnvIf Remote_Addr "127\.0\.0\.1" dontlog
CustomLog logs/ip_access_log Combined env=!dontlog

# --- chmod basé sur les droits d'un autre fichier
chmod --reference=/tmp/toto.txt /tmp/tata.txt

# --- changer les attributs d'un fichier pour le rendre R/O Read only (immutable)
chattr +i /etc/resolv.conf

# --- backup d'un fichier en une ligne
cp -a /etc/my.cnf{,.bkp}

# --- création d'un répertoire et ajustement de l'ownership et droits sur une ligne
mkdir /tmp/toto && chown apache:apache $_ && chmod 700 $_

# --- watch tcp,udp open ports in real time with socket summary
watch -n1 ss -stplu

# --- mettre à jour la liste des autorités de certifications par défaut
yum update -y ca-certificates

# --- info avec systemd sur les corefile
coredumpctl list
coredumpctl info 12345

# --- comment conserver un header line d'une commande avant sort, etc..
# (utilisation d'un subshell)
ps -eo pmem,pcpu,vsize,pid,cmd | (read -r; printf "%s\n" "$REPLY"; sort)

# --- split d'un fichier en x fichiers de 1000 lignes
split --lines=1000 fichier.txt 

# --- Problème à ouvrir la fenêtre X (ex: avec Baobab)
# S'assurer d'avoir ces paramètres dans /etc/ssh/sshd_config
X11Forwarding yes
X11UseLocalhost no
# redémarrer le service sshd au besoin

# --- changement de mapping attributs LDAP via iManager
# ne pas oublier de faire sur le serveur
nldap -u
nldap -l

# --- afficher adresse publique d'un serveur
curl ipinfo.io/ip

# --- grep de tcpdump
yum install -y ngrep
ngrep -W byline "X-Forwarded-For: 192.168.200.241" port 80

# --- xming avec paramètres pour ne pas fusionner les 2 écrans en 1
"C:\Program Files (x86)\Xming\Xming.exe" :0 -clipboard -multiwindow -nomultimonitors

# --- pour ignorer la définition d'un alias on précède par un backslash
\ls

# --- Utilisation d'une variable basée sur la date pour des fichiers de backups par exemple
NOW=$(date +"%F_%Hh%M")

# --- Afficher la vitesse de la connexion réseau
ethtool eth0
mii-tool -v eth0
iwconfig # pour wireless

# --- Debian commands
# Affichage du package gammu installé
apt-cache show gammu

# update packages
apt-get update

# installation de netcat
apt-get install netcat

# retirer un package sans leur retirer leur fichiers de configuration
apt-get remove vsftpd

# retirer au complet le package
apt-get purge vsftpd
ou
apt-get remove --purge vsftpd

# Infos timezone et DST
zdump -v /etc/localtime | grep 2019

# tester connexion radius
radtest shqsrc 'motdepasse' 10.100.120.213:1812 1 testing123
# laisser un blanc avant radtest pour que bash ne sauvegarde pas le mot de passe dans le history!

# dhcp release & renew
dhclient -r eth0
dhclient eth0

# pour transformer rapidment le clavier en Azerty ou Qwerty
# qwerty:
loadkeys us
# azerty
loadkeys fr

# Pour lister les SSID découverts
iwlist wlan0 scan

# --- Docker pour s'attacher au container et rouler bash
docker exec -it nom_container /bin/bash

# --- Configuration de ZenWorks pour portatif Serge
Stratégies	->	Production	->	Endpoint Security	->	Serge-FW - LocationExterneAdmin
Onglet détails, section Paramètres de pare-feu
